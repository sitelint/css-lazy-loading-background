"undefined"==typeof globalThis&&(Object.defineProperty(Object.prototype,"__magic__",{configurable:!0,get:function(){return this}}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__);class CommonUtilities{static isHostMethod(e,t){if(!e)return!1;const o=typeof e[t];return this.reUnknown.test(o)||this.reMethod.test(o)&&Boolean(e)||!1}}CommonUtilities.reMethod=/^(function|object)$/,CommonUtilities.reUnknown=/^unknown$/;class CssLazyLoadingBackground{constructor(){this.lazyBackgroundObserver=null,this.isIntersectionObserverSupported=CommonUtilities.isHostMethod(globalThis,"IntersectionObserver")}initialise(){const e=()=>{const e=Array.from(document.querySelectorAll("*"));if(0===e.length)return;const t=e=>{if(!1===e.isIntersecting)return;const t=e.target,o=globalThis.getComputedStyle(t).getPropertyValue("--background-image-lazy");0!==o.length&&(t.style.backgroundImage=`url('${o}')`,this.lazyBackgroundObserver.unobserve(t))},o=e=>{this.lazyBackgroundObserver.observe(e)},r=e=>{const t=globalThis.getComputedStyle(e).getPropertyValue("--background-image-lazy");null!==t&&(e.style.backgroundImage=`url('${t}')`)};this.isIntersectionObserverSupported?(this.lazyBackgroundObserver=new IntersectionObserver((e=>{e.forEach(t)})),e.forEach(o)):e.forEach(r)};"string"==typeof document.readyState&&"complete"===document.readyState?e():document.addEventListener("DOMContentLoaded",e,!0)}}export{CssLazyLoadingBackground};
