!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["css-lazy-loading-background"]={})}(this,(function(e){"use strict";"undefined"==typeof globalThis&&(Object.defineProperty(Object.prototype,"__magic__",{configurable:!0,get:function(){return this}}),__magic__.globalThis=__magic__,delete Object.prototype.__magic__);class t{static isHostMethod(e,t){if(!e)return!1;const n=typeof e[t];return this.reUnknown.test(n)||this.reMethod.test(n)&&Boolean(e)||!1}}t.reMethod=/^(function|object)$/,t.reUnknown=/^unknown$/;e.CssLazyLoadingBackground=class{constructor(){this.lazyBackgroundObserver=null,this.isIntersectionObserverSupported=t.isHostMethod(globalThis,"IntersectionObserver"),this.processEntriesBindInstance=null}loadBackgroundIfElementOnScreen(e){if(!1===e.isIntersecting)return;const t=e.target,n=globalThis.getComputedStyle(t).getPropertyValue("--background-image-lazy");0!==n.length&&(t.style.backgroundImage=`url('${n.replace(/(?:\\(.))/g,"$1").trim()}')`,t.style.removeProperty("--background-image-lazy"),this.lazyBackgroundObserver.unobserve(t))}processEntries(e){for(const t of e)this.loadBackgroundIfElementOnScreen(t)}observeElementVisibility(e){this.lazyBackgroundObserver.observe(e)}setBackground(e){const t=globalThis.getComputedStyle(e).getPropertyValue("--background-image-lazy");0!==t.length&&(e.style.backgroundImage=`url('${t.replace(/(?:\\(.))/g,"$1").trim()}')`,e.style.removeProperty("--background-image-lazy"))}getLazyBackgroundDetail(e){return globalThis.getComputedStyle(e).getPropertyValue("--background-image-lazy").length>0}initialiseStyleBackgroundIntersectionObserver(){const e=Array.from(document.querySelectorAll("body *"));if(0===e.length)return;const t=e.filter(this.getLazyBackgroundDetail);if(0!==t.length)if(this.isIntersectionObserverSupported){this.processEntriesBindInstance=this.processEntries.bind(this),this.lazyBackgroundObserver=new IntersectionObserver(this.processEntriesBindInstance);for(const e of t)this.observeElementVisibility(e)}else for(const e of t)this.setBackground(e)}destroy(){this.processEntriesBindInstance=null}initialise(){"string"==typeof document.readyState&&"loading"!==document.readyState?this.initialiseStyleBackgroundIntersectionObserver():window.addEventListener("DOMContentLoaded",this.initialiseStyleBackgroundIntersectionObserver,!0)}}}));
